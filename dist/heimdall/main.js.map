{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/execution.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main-nav-bar/main-nav-bar.component.ts","./src/app/main-nav-bar/main-nav-bar.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/app-start/app-start.component.ts","./src/app/app-start/app-start.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAkD;AACkB;;;;;;;;;;;;;;;;;;ICDpE,sEACE;IAAA,4EAAkD;IACpD,4DAAM;;;IAiCA,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,8FACF;;;;;IAjCN,sEACE;IAAA,oEACE;IAAA,iFACI;IAAA,4EACI;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;IACT,oFACE;IAAA,4EACE;IAAA,2EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAA6D;IAAA,oEAAQ;IAAA,4DAAO;IAC9E,4DAAS;IAET,6EACE;IAAA,4EAAU;IAAA,iEAAK;IAAA,4DAAW;IAC1B,wEAAO;IAAA,iEAAK;IAAA,4DAAO;IACrB,4DAAS;IACX,4DAAW;IACf,2EAAqB;IAAA,qEAAS;IAAA,4DAAO;IACrC,sEAAoC;IACpC,8EAEE;IAAA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,4DAAS;IACX,8EAEE;IAAA,4EAAU;IAAA,iEAAK;IAAA,4DAAW;IAC1B,4DAAS;IACb,4DAAc;IAChB,4DAAI;IAGA,sHACE;IAGF,iEAAI;IAAA,iEAAI;IAAA,iEACN;IACA,gFACF;IAAA,qFACE;IAAA,iFACF;IAAA,uEAEE;IAAA,mFACE;IAAA,kFAAgB;IAAA,mEAAO;IAAA,4DAAiB;IAC1C,4DAAkB;IACpB,iEACA;IAAA,iEACE;IAAA,oFACE;IAAA,4EAEE;IAAA,6EAAkD;IAAA,sEAChD;IAAA,sEAAI;IAAA,sFACF;IAAA,6EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,wEACF;IAAA,4DAAiB;IAAA,4DAAK;IACtB,sEAAI;IAAA,sFACF;IAAA,6EAAW;IAAA,gEAAI;IAAA,4DAAY;IAC3B,wEACF;IAAA,4DAAiB;IAAA,4DAAK;IACxB,4DAAK;IAAA,4DAAQ;IACb,qEACE;IAAA,sFACA;IAAA,6EAAW;IAAA,qEAAS;IAAA,4DAAY;IAChC,wEACF;IAAA,4DAAiB;IAEf,sFACE;IAAA,6EAAW;IAAA,iEAAK;IAAA,4DAAY;IAC5B,wEACF;IAAA,4DAAiB;IACjB,sFACE;IAAA,6EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,wEACF;IAAA,4DAAiB;IAEnB,4DAAI;IACN,4DAAO;IACX,4DAAmB;IACnB,wFACA;IAAA,6EAAkD;IAAA,sEAChD;IAAA,8EAA+F;IAArD,oTAAmB;IAAkC,mEAAO;IAAA,4DAAS;IAC/G,mEAAe;IACf,sEAAoC;IACpC,8EAA+C;IAAA,oEAAQ;IAAA,4DAAS;IAClE,4DAAK;IAAA,4DAAQ;IACb,4DAAmB;IAEnB,wFACE;IAAA,6EAAwE;IAAhD,+RAAS,wBAAsB,aAAa,EAAE,IAAC;IAAC,8FAAkC;IAAA,4DAAQ;IACpH,4DAAmB;IACrB,4DAAM;IACR,4DAAgB;IAChB,iFACE;IAAA,sEACF;IAAA,4DAAgB;IAChB,4DAAgB;IAClB,4DAAW;IACX,4DAAM;;;;IA9F0B,0DAA0B;IAA1B,kFAA0B;IA4B/C,2DAAY;IAAZ,6EAAY;IAiBP,2DAAyB;IAAzB,yFAAyB;IAgC6B,2DAA+B;IAA/B,+FAA+B;IAGnE,0DAAoB;IAApB,6IAAoB;;ADpE/C,MAAM,iBAAiB;IAO5B,YAAmB,IAAqB,EAAU,EAAc,EAAU,EAAoB,EACrF,OAA0B,EAAS,MAAc;QADvC,SAAI,GAAJ,IAAI,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAY;QAAU,OAAE,GAAF,EAAE,CAAkB;QACrF,YAAO,GAAP,OAAO,CAAmB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAP1D,gBAAW,GAAW,EAAE;QAExB,QAAG,GAAS,IAAI,CAAC;QACjB,aAAQ,GAAS,IAAI,CAAC;QAMlB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAE/B,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;QAGtB,CAAC,CAAC;IAEN,CAAC;IAED,QAAQ;QAGN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,MAAM,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC/B,SAAS,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClC,IAAI,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC7B,KAAK,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACrE,QAAQ,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAElC,CAAC;IAEJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;QACnB,IAAI,kBAAkB,GAAG;YACvB,0EAA0E;YAC1E,mDAAmD;YACnD,GAAG,EAAE,kCAAkC;YACvC,qBAAqB;YACrB,eAAe,EAAE,IAAI;YACrB,GAAG,EAAE;gBACH,QAAQ,EAAE,iBAAiB;aAC5B;YACD,OAAO,EAAE;gBACP,WAAW,EAAE,qBAAqB;gBAClC,UAAU,EAAE,IAAI;gBAChB,cAAc,EAAE,IAAI;aACrB;YACD,iBAAiB,EAAE,kCAAkC;SACtD,CAAC;QAGF,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAE1B,IAAI,CAAC,GAAG,GAAE,IAAI,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAC,EAAE;gBACzE,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,CAAC,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAO,OAAO,EAAC,EAAE;gBAC3H,MAAM,IAAI,CAAC,EAAE,EAAE,CAAC;gBAChB,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,2BAA2B,CAAC;gBAC5I,KAAK,CAAC,2GAA2G,CAAC;gBAClH,IAAI,CAAC,GAAG,GAAE,IAAI,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YACvE,CAAC,EAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAC,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;gBACpB,IAAI,CAAC,GAAG,GAAE,KAAK,CAAC;gBAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;gBACjC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAGtB,CAAC,CAAC;SAGD;aAAI;YACL,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;YAClB,IAAI,CAAC,GAAG,GAAC,KAAK,CAAC;YACf,KAAK,CAAC,uBAAuB,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,yDAAyD;SAE7E;IAGH,CAAC;IAGK,EAAE;;YACN,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,qBAAqB,EAAE,CAAC;QACxD,CAAC;KAAA;;kFA7FU,iBAAiB;iGAAjB,iBAAiB;QCnB9B,6GACE;QAGF,8GACE;QAiGF,gEAAI;QAAA,gEAAI;QAAA,gEAAI;QAAA,gEAAI;;QAtGX,8EAAgB;QAIhB,0DAAiB;QAAjB,+EAAiB;;6FDeT,iBAAiB;cAN7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACL;AACiC;;;;;;;;;;;;ICkChE,oFACE;IAAA,+EACE;IAAA,kFACE;IAAA,iFACE;IAAA,uDACF;IAAA,4DAAiB;IACnB,4DAAkB;IAClB,gEAAI;IAAA,gEACJ;IAAA,uFACE;IAAA,2aAKZ;IAAA,gEAAI;IAAA,iEACY;IAAA,8kBAON;IAAA,4DAAmB;IACrB,4DAAW;IACb,4DAAgB;;;IAxBkC,iFAAqB;IAI/D,0DACF;IADE,yFACF;;ADhCL,MAAM,aAAa;IAgBxB,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAf1D,2EAA2E;QAC3E,UAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/D,0DAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;YAClB,IAAI,OAAO,EAAE;gBACX,OAAO;oBACL,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;iBAC1C,CAAC;aACH;YAED,OAAO;gBACL,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;aAC1C,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IAE2D,CAAC;;0EAhBnD,aAAa;6FAAb,aAAa;QCP1B,oEACE;QAAA,iFACI;QAAA,4EACI;QAAA,2EAAU;QAAA,oEAAS;QAAA,4DAAW;QAChC,4DAAS;QACT,oFACE;QAAA,4EACE;QAAA,2EAAU;QAAA,iEAAM;QAAA,4DAAW;QAC3B,2EAA6D;QAAA,oEAAQ;QAAA,4DAAO;QAC9E,4DAAS;QAET,6EACE;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,wEAAO;QAAA,iEAAK;QAAA,4DAAO;QACrB,4DAAS;QACX,4DAAW;QACf,2EAAqB;QAAA,qEAAS;QAAA,4DAAO;QACrC,sEAAoC;QACpC,6EAEE;QAAA,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC3B,4DAAS;QACX,6EAEE;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,4DAAS;QACb,4DAAc;QAChB,4DAAI;QAIF,2EACE;QAAA,0EAAmB;QAAA,qEAAS;QAAA,4DAAK;QACjC,qFACE;QAAA,iIACE;;QAwBJ,4DAAgB;QAClB,4DAAM;QAEN,iEAEA;QAAA,4EAEE;QAAA,qFACI;QAAA,iFACI;QAAA,2EACI;QAAA,mFAEE;QAAA,kFAAgB;QAAA,qEAAS;QAAA,4DAAiB;QAC1C,qFAAmB;QAAA,qEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAElB,oFACE;QAAA,qEACE;QAAA,0hBAOF;QAAA,4DAAI;QACN,4DAAmB;QACrB,4DAAM;QACZ,4DAAgB;QAEhB,qFACI;QAAA,sEACJ;QAAA,4DAAgB;QAClB,4DAAgB;QAElB,4DAAW;QAEb,4EAEE;QAAA,qFACI;QAAA,iFACI;QAAA,sEACJ;QAAA,4DAAgB;QAEhB,iFAEE;QAAA,2EACE;QAAA,mFAEE;QAAA,kFAAgB;QAAA,mEAAO;QAAA,4DAAiB;QACxC,qFAAmB;QAAA,qEAAS;QAAA,4DAAoB;QAClD,4DAAkB;QAElB,oFACE;QAAA,qEACE;QAAA,ovBAQA;QAAA,iEAAI;QAAA,iEACJ;QAAA,iVAIF;QAAA,4DAAI;QACN,4DAAmB;QACrB,4DAAM;QAGR,4DAAgB;QAClB,4DAAgB;QAEpB,4DAAW;QAOX,qFACE;QAAA,iFAEI;QAAA,2EACI;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QACtB,iEACA;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,8EACE;QAAA,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC/B,4DAAS;QAET,6EAA8C;QAAA,kFAAsB;QAAA,4DAAQ;QAC9E,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,iEACA;QAAA,sEACI;QAAA,uEACJ;QAAA,4DAAK;QACL,4DAAM;QAGV,4DAAgB;QAChB,iFAEI;QAAA,2EACI;QAAA,0EAAgC;QAAA,8EAAkB;QAAA,4DAAK;QAC3D,iEAEA;QAAA,2EACE;QAAA,8EACE;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QACjC,4DAAS;QACT,6EAA6B;QAAA,oEAAQ;QAAA,4DAAQ;QAC/C,4DAAM;QACN,iEACA;QAAA,2EACE;QAAA,8EACE;QAAA,4EAAU;QAAA,0EAAc;QAAA,4DAAW;QACrC,4DAAS;QAET,6EAA6B;QAAA,iEAAK;QAAA,4DAAQ;QAC5C,4DAAM;QAGR,4DAAM;QAMR,4DAAgB;QAChB,iFACI;QAAA,4EACI;QAAA,2EAAgC;QAAA,uEAAU;QAAA,4DAAK;QACnD,kEAEA;QAAA,0EACI;QAAA,mfAGJ;QAAA,4DAAQ;QACR,4DAAM;QACV,4DAAgB;QAElB,4DAAgB;;;QA/MY,0DAA0B;QAA1B,kFAA0B;QAgCnC,2DAAkC;QAAlC,gJAAkC;;6FD3B1C,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAIzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAC;QACL,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,gCAAgC;QAC5C,WAAW,EAAE,uCAAuC;QACpD,SAAS,EAAE,gBAAgB;QAC3B,aAAa,EAAE,4BAA4B;QAC3C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CAEJ,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AC5BnE;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAKxD,MAAM,gBAAgB;IAY3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAV5B,SAAI,GAAG,2BAA2B,CAAC;QAE3C,YAAO,GAAG,IAAI,gEAAW,CAAC;YACxB,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QAEH,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;IAEsC,CAAC;IAEzC,cAAc,CAAC,GAAW,EAAE,KAAa,EAAE,OAAe;QACxD,MAAM,IAAI,GAAG,EAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,YAAY,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;;gFAnBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCLzB,2EAA+B;;6FDKlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AACF;AACsB;AACR;AACJ;AAEnB;AACS;AACoB;AACtB;AACG;AACS;AACE;AACd;AACc;AAEN;AAEiB;AAClB;AACN;AACI;AACE;AACA;AACN;AACI;AACJ;AACE;AACF;AACM;AACF;AACY;AACP;AAET;AACJ;AAED;AACS;AACN;AACN;AACY;;;AA+CpD,MAAM,SAAS;;wFAAT,SAAS,cAFJ,2DAAY;4IAEjB,SAAS,mBALT;QACT,mEAAe;QACf,yEAAgB;KACjB,YAhCQ;YACP,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAChB,6FAAuB;YACvB,0DAAW;YACX,kEAAmB;YACnB,2EAAgB;YAChB,qEAAa;YACb,yEAAe;YACf,2EAAgB;YAChB,qEAAa;YACb,uEAAc;YACd,8EAAiB;YACjB,qEAAa;YACb,iEAAY;YACZ,gEAAiB,CAAC,aAAa,CAAC,yEAAW,CAAC,QAAQ,CAAC;YACrD,8EAAiB;YACjB,2FAAwB;YACxB,6DAAgB;YAChB,2EAAgB;YAChB,qEAAa;YACb,yEAAe;YACf,qEAAa;YACb,2EAAgB;YAChB,yEAAe;YACf,qFAAqB;YACrB,mFAAoB;SACrB;mIAMU,SAAS,mBA3ClB,2DAAY;QACZ,wFAAmB;QACnB,kEAAa;QACb,sEAAc;QACd,+EAAiB;QACjB,iFAAiB;QACjB,mEAAa;QACb,iFAAiB,aAGjB,uEAAa;QACb,qEAAgB;QAChB,oEAAgB;QAChB,6FAAuB;QACvB,0DAAW;QACX,kEAAmB;QACnB,2EAAgB;QAChB,qEAAa;QACb,yEAAe;QACf,2EAAgB;QAChB,qEAAa;QACb,uEAAc;QACd,8EAAiB;QACjB,qEAAa;QACb,iEAAY,oEAEZ,8EAAiB;QACjB,2FAAwB;QACxB,6DAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,yEAAe;QACf,qEAAa;QACb,2EAAgB;QAChB,yEAAe;QACf,qFAAqB;QACrB,mFAAoB;6FAOX,SAAS;cA7CrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wFAAmB;oBACnB,kEAAa;oBACb,sEAAc;oBACd,+EAAiB;oBACjB,iFAAiB;oBACjB,mEAAa;oBACb,iFAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,oEAAgB;oBAChB,6FAAuB;oBACvB,0DAAW;oBACX,kEAAmB;oBACnB,2EAAgB;oBAChB,qEAAa;oBACb,yEAAe;oBACf,2EAAgB;oBAChB,qEAAa;oBACb,uEAAc;oBACd,8EAAiB;oBACjB,qEAAa;oBACb,iEAAY;oBACZ,gEAAiB,CAAC,aAAa,CAAC,yEAAW,CAAC,QAAQ,CAAC;oBACrD,8EAAiB;oBACjB,2FAAwB;oBACxB,6DAAgB;oBAChB,2EAAgB;oBAChB,qEAAa;oBACb,yEAAe;oBACf,qEAAa;oBACb,2EAAgB;oBAChB,yEAAe;oBACf,qFAAqB;oBACrB,mFAAoB;iBACrB;gBACD,SAAS,EAAE;oBACT,mEAAe;oBACf,yEAAgB;iBACjB,EAAG,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC9B;;;;;;;;;;;;;;ACxFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;AAQ3C,MAAM,mBAAmB;IAE9B,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEtC,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;;QCRhC,2FACI;QAAA,oFACI;QAAA,+EACI;QAAA,uEAA2C;QAA1B,kRAAS,WAAe,IAAC;QAAC,+DAAI;QAAA,4DAAI;QACnD,uEAA2C;QAA1B,kRAAS,WAAe,IAAC;QAAC,mEAAQ;QAAA,4DAAI;QAC3D,4DAAe;QACnB,4DAAc;QACd,sFACI;QAAA,iFACI;QAAA,6EACI;QADsE,wRAAS,YAAgB,IAAC;QAChG,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC7B,4DAAS;QACT,2EAAuB;QAAA,oEAAQ;QAAA,4DAAO;QACtC,sEAA4B;QAC5B,+EAAyF;QAA3C,8IAAS,qBAAsB,QAAQ,EAAE,IAAC;QAAC,uEAAW;QAAA,4DAAW;QACnH,4DAAc;QACd,wEACI;QAAA,4EAA+B;QACnC,4DAAO;QACX,4DAAsB;QAC1B,4DAAwB;;6FDZX,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEACA;;6FDMa,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACQ;AACqB;AACtB;AACc;AACX;AACS;AACZ;AACc;;;AAEpE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAiB,EAAE,QAAQ,EAAE;YACvD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;YAC1C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;YAC1D,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gFAAiB,EAAE;YAC7C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;SAC5D,EAAE;IACH,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,wFAAmB,EAAE,QAAQ,EAAE;YACxD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;YAC1C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;YACzD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gFAAiB,EAAE;YAC7C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;SAC3D,EAAE;IACH,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;IAC1D,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gFAAiB,EAAE;IAC7C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;CAC5D,CAAC;AAYK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBARlB;YACP,4DAAY;YACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B,EAEC,4DAAY;mIAGH,gBAAgB,cAPzB,4DAAY,2EAIZ,4DAAY;6FAGH,gBAAgB;cAV5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC7B;gBACD,OAAO,EAAE;oBACP,4DAAY;iBACb;aACF;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGkB;AAI3B;;;;;;;;;;;;;;;;;;ICNrC,sEACE;IAAA,4EAAkD;IACpD,4DAAM;;;IAiCJ,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,6FACF;;;IAmBY,uEAAkE;IAAA,+EAAmB;IAAA,4DAAO;;;IAC1F,uEAA6D;IAAA,8EAAmB;IAAA,4DAAO;;;IAF3F,0EACE;IAAA,yHAAkE;IAChE,yHAA6D;IACjE,4DAAM;;;IAFE,0DAAyD;IAAzD,0HAAyD;IACvD,0DAAsD;IAAtD,uHAAsD;;;IAQ9D,uEAAmE;IAAA,0FAA0B;IAAA,4DAAO;;;IADtG,0EACE;IAAA,yHAAmE;IACvE,4DAAM;;;IADI,0DAA4D;IAA5D,6HAA4D;;;;;IA7DhF,sEACE;IAAA,oEACE;IAAA,iFACI;IAAA,4EACI;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;IACT,oFACE;IAAA,4EACE;IAAA,2EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,2EAA6D;IAAA,oEAAQ;IAAA,4DAAO;IAC9E,4DAAS;IAET,6EACE;IAAA,4EAAU;IAAA,iEAAK;IAAA,4DAAW;IAC1B,wEAAO;IAAA,iEAAK;IAAA,4DAAO;IACrB,4DAAS;IACX,4DAAW;IACf,2EAAqB;IAAA,qEAAS;IAAA,4DAAO;IACrC,sEAAoC;IACpC,8EAEE;IAAA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,4DAAS;IACX,8EAEE;IAAA,4EAAU;IAAA,iEAAK;IAAA,4DAAW;IAC1B,4DAAS;IACb,4DAAc;IAChB,4DAAI;IAGJ,mHACE;IAGF,iEAAI;IAAA,iEAAI;IAAA,iEACN;IACA,gFACF;IAAA,qFACE;IAAA,iFACF;IAAA,uEACE;IAAA,mFACE;IAAA,kFAAiB;IAAA,iEAAK;IAAA,4DAAiB;IACzC,4DAAkB;IACpB,iEACA;IAAA,iEACE;IAAA,oFAEE;IAAA,4EACE;IAAA,qEACE;IAAA,sFACE;IAAA,mHACE;IAGF,6EAAW;IAAA,4EAAgB;IAAA,4DAAY;IACvC,wEACF;IAAA,4DAAiB;IAEjB,sFACE;IAAA,mHACE;IAEF,6EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,6EACF;IADkC,gUAA2B;IAA3D,4DACF;IAAA,4DAAiB;IACnB,4DAAI;IACN,4DAAO;IACX,4DAAmB;IAEnB,wFACA;IAAA,6EAAkD;IAAA,sEAChD;IAAA,8EAAkH;IAA1E,qTAAoB;IAAsD,iEAAK;IAAA,4DAAS;IAChI,mEAAe;IACf,sEAAoC;IACpC,8EAA+C;IAAA,oEAAQ;IAAA,4DAAS;IAClE,4DAAK;IAAA,4DAAQ;IACb,4DAAmB;IACnB,iEACA;IAAA,wFAAiC;IAAA,wEAAY;IAAA,4DAAmB;IAChE,iEACA;IAAA,oFACI;IAAA,2EACA;IAAA,2EACE;IAAA,2EACE;IAAA,8EACE;IADqF,4TAA2B;IAChH,4EAAU;IAAA,oEAAQ;IAAA,4DAAW;IAC/B,4DAAS;IACX,4DAAM;IACN,2EACE;IAAA,8EACE;IAAA,4EAAU;IAAA,wEAAY;IAAA,4DAAW;IACnC,4DAAS;IACX,4DAAM;IACN,2EACE;IAAA,8EACE;IADyF,0TAAyB;IAClH,sEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAmB;IAEnB,wFACE;IAAA,6EAAgF;IAAA,kGAAsC;IAAA,4DAAQ;IAChI,4DAAmB;IACrB,4DAAM;IACN,4DAAgB;IAChB,iFACE;IAAA,sEACF;IAAA,4DAAgB;IAChB,4DAAgB;IAClB,4DAAW;IAhHT,4DACE;;;;IAE8B,0DAA0B;IAA1B,kFAA0B;IA4BnD,2DAAW;IAAX,4EAAW;IAiBe,2DAA6B;IAA7B,6FAA6B;IAG7C,0DAA4F;IAA5F,oKAA4F;IAS5F,0DAAkG;IAAlG,0KAAkG;IAYlC,0DAAmC;IAAnC,mGAAmC;IAGtF,0DAAoB;IAApB,6IAAoB;;ADhE/C,MAAM,cAAc;IAUzB,YAAmB,IAAqB,EAAS,EAAc,EAAS,OAA0B,EACzF,EAAoB,EAAS,MAAc;QADjC,SAAI,GAAJ,IAAI,CAAiB;QAAS,OAAE,GAAF,EAAE,CAAY;QAAS,YAAO,GAAP,OAAO,CAAmB;QACzF,OAAE,GAAF,EAAE,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QARpD,aAAQ,GAAU,IAAI,KAAK,EAAO,CAAC;QAEnC,OAAE,GAAS,IAAI,CAAC;QAEhB,aAAQ,GAAS,IAAI,CAAC;QACtB,eAAU,GAAW,EAAE;QAOrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAE/B,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEtB,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;SACpE;IAEF,CAAC;IAKF,QAAQ;QAEN,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,EAAC,EAAE;YACnE,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC5B,CAAC,CAAC;QAEF,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,KAAK,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;oBAC3B,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK;iBACrC,CAAC,CAAC;YACH,QAAQ,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,4BAA4B;QAC5B,IAAI,QAAQ,GAAG,IAAI,iDAAa,CAAC,oBAAoB,EAAE,CAAC;QACxD,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3B,iDAAa,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAS,MAAM;YAC5D,0CAA0C;YAE1C,2BAA2B;YAC3B,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IAKL,CAAC;IAED,aAAa;QAEX,IAAI,QAAQ,GAAG,IAAI,iDAAa,CAAC,kBAAkB,EAAE,CAAC;QAC1D,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC7B,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3B,iDAAa,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC7C,CAAC,OAAO,EAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAC,EAAE;YAChB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEtB,CAAC,CAAC;IACA,CAAC;IAGD,QAAQ;QAEN,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAC5B,IAAI,CAAC,EAAE,GAAE,IAAI,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC;iBACzG,IAAI,CAAC,CAAC,OAAO,EAAC,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAC,EAAE;gBAChB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAEtB,CAAC,CAAC;SACH;aAAI;YACL,IAAI,CAAC,EAAE,GAAC,KAAK,CAAC;YACd,IAAI,CAAC,UAAU,GAAG,gDAAgD;SACnE;IACH,CAAC;IAEC,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;;4EA1GU,cAAc;8FAAd,cAAc;QCfvB,0GACE;QAGF,2GACE;;QALG,8EAAgB;QAIhB,0DAAiB;QAAjB,+EAAiB;;6FDWb,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACG;AAEL;;;;;;;;;;;;;;;;ICgBpB,iFAA0E;IAAA,uDAAS;IAAA,4DAAa;;;IAAtC,2EAAe;IAAC,0DAAS;IAAT,yEAAS;;;IAOnF,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFyC,6EAAiB;IACnE,0DACJ;IADI,sFACJ;;;IAgBZ,sEACI;IAAA,uDACA;IAAA,gEACJ;IAAA,4DAAM;;;IAFF,0DACA;IADA,kFACA;;ADhCb,MAAM,aAAa;IAsBxB,YAAoB,gBAAkC,EAAS,MAAc;QAAzD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QApB7E,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAE9B,iBAAY,GAAG,aAAa,CAAC;QAC7B,kBAAa,GAAG,CAAC,CAAC;QAClB,gBAAW,GAAG,QAAQ,CAAC;QACvB,YAAO,GAAG,KAAK,CAAC;QAChB,sBAAiB,GAAa;YAC5B,SAAS;YACT,QAAQ;SACT,CAAC;QACF,WAAM,GAAa;YACjB,QAAQ;YACR,MAAM;YACN,MAAM;YACN,MAAM;YACN,OAAO;SACR,CAAC;QACF,cAAS,GAAQ,6BAA6B,CAAC;QAC/C,WAAM,GAAG,EAAE,CAAC;QAGV,wEAAwE;QACxE,0HAA0H;QAC1H,2CAA2C;QAC3C,IAAI;IACN,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aAC/C,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAClC,CAAC;IACN,CAAC;IAEO,OAAO,CAAC,KAAa;QAC3B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAC1H,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;gBACnC,IAAG,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,EAAE;oBACzC,IAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;iBAChD;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBAC3B;gBACD,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/B,IAAI,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;gBAC5B,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IAEH,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC;QAC5E,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,OAAO;QACnB,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACvD,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC;IACf,CAAC;;0EA9FW,aAAa;6FAAb,aAAa;;QCd1B,gFACI;QACA,6EACI;QAAA,mFACI;QAAA,mFACI;QAAA,6EACI;QADE,iRAAU,oBAAqB,IAAC;QAClC,iFACI;QAAA,4EAAW;QAAA,8DAAG;QAAA,4DAAY;QAC1B,yEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEAKA;QAAA,6FACI;QAAA,yHAA0E;;QAC9E,4DAAmB;QACvB,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,kFACI;QAAA,yHACI;QAER,4DAAa;QACjB,4DAAiB;QACjB,iEACA;QAAA,8EAAsD;QAAA,wDAAe;QAAA,4DAAS;QAC9E,iEAAI;QAAA,iEACR;QAAA,4DAAO;QACX,4DAAgB;QAChB,oFACI;QAAA,sEACJ;QAAA,4DAAgB;QAChB,iEACA;QAAA,oFACI;QAAA,mFAAqE;QACzE,4DAAgB;QAChB,oFACI;QAAA,4GACI;QAGR,4DAAgB;QACpB,4DAAgB;QACpB,4DAAU;QAEd,4DAAgB;;;QAhDW,0DAAa;QAAb,sEAAa;QAYR,2DAAyB;QAAzB,sFAAyB;QAGjB,0DAA6C;QAA7C,2JAA6C;QAO7C,0DAAyC;QAAzC,0FAAyC;QAMP,0DAAe;QAAf,gFAAe;QAI9D,0DAAa;QAAb,sEAAa;QACnB,0DAAiB;QAAjB,2IAAiB;QAGX,0DAAa;QAAb,sEAAa;QACN,0DAAqB;QAArB,kFAAqB;QAE5B,0DAAa;QAAb,sEAAa;QACnB,0DAA0B;QAA1B,+EAA0B;;6FD9BlC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,uEACI;QAAA,2EAA+B;QACnC,4DAAO;;6FDKM,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { auth, User } from 'firebase';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router, RouterEvent } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport * as firebase from 'firebase';\r\nimport { setDefaultService } from 'selenium-webdriver/chrome';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  textoErrorr: string = ''\r\n  formularioc:FormGroup; \r\n  dcr:boolean=true;\r\n  cargando:boolean=true;\r\n  \r\n  \r\n  constructor(public auth: AngularFireAuth, private fb:FormBuilder, private bd: AngularFirestore,\r\n    public spinner: NgxSpinnerService, public router: Router) {\r\n\r\n      this.auth.user.subscribe((user)=>{\r\n      \r\n        this.cargando=false;\r\n\r\n        \r\n      })\r\n    \r\n  }\r\n  \r\n  ngOnInit(): void {\r\n\r\n\r\n    this.formularioc = this.fb.group({\r\n      nombre:['',Validators.required],\r\n      apellidos:['',Validators.required],\r\n      user:['',Validators.required],\r\n      email:['',Validators.compose([Validators.required,Validators.email])],\r\n      password:['',Validators.required]\r\n      \r\n    })\r\n    \r\n  }\r\n  \r\n  agregar(){\r\n    this.cargando=true;\r\n    var actionCodeSettings = {\r\n      // URL you want to redirect back to. The domain (www.example.com) for this\r\n      // URL must be whitelisted in the Firebase Console.\r\n      url: 'http://localhost:4200/start/home',\r\n      // This must be true.\r\n      handleCodeInApp: true,\r\n      iOS: {\r\n        bundleId: 'com.example.ios'\r\n      },\r\n      android: {\r\n        packageName: 'com.example.android',\r\n        installApp: true,\r\n        minimumVersion: '12'\r\n      },\r\n      dynamicLinkDomain: 'http://localhost:4200/start/home'\r\n    };\r\n    \r\n   \r\n    if (this.formularioc.valid) {\r\n      \r\n      this.dcr =true;\r\n      console.log(this.formularioc.value.email)\r\n    this.bd.collection('clientes').add(this.formularioc.value).then((termino)=>{\r\n      this.cargando=false;\r\n      console.log(this.formularioc.value)\r\n    })\r\n    \r\n    this.auth.createUserWithEmailAndPassword(this.formularioc.value.email,this.formularioc.value.password).then(async (termino)=>{\r\n      await this.SE();\r\n      this.cargando=false;\r\n      console.log(\"el usuario \", this.formularioc.value.email,\" con la contraseña \", this.formularioc.value.password, \" Se agregos porfa checalo\")\r\n      alert(\"The user was added correctly, we will send you a verification email, please confirm your section to start\")\r\n      this.dcr =true;\r\n      this.router.navigate(['start/login'], { state: { loggedIn: true } });\r\n    }).catch((error)=>{\r\n      this.cargando=false;\r\n      this.dcr =false;\r\n      this.textoErrorr = error.message;\r\n      this.spinner.hide();\r\n\r\n      \r\n    })\r\n    \r\n      \r\n    }else{\r\n    this.cargando=false;\r\n      this.dcr=false;      \r\n      alert(\"Formulario incorrecto\")\r\n      this.textoErrorr = 'Lo siento puede ser que este usuario ya esta registrado'\r\n      \r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  async SE():Promise<void>{\r\n    (await this.auth.currentUser).sendEmailVerification();\r\n  }\r\n\r\n\r\n  }\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n","<div *ngIf=\"cargando\">\r\n  <mat-spinner class=\"example-margin\"></mat-spinner>\r\n</div>\r\n\r\n<div *ngIf=\"!cargando\">\r\n  <p>\r\n    <mat-toolbar color=\"primary\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item routerLink=\"/start/register\" routerLinkActive=\"Active\">\r\n              <mat-icon>create</mat-icon>\r\n              <span routerLink=\"/start/register\" routerLinkActive=\"active\">Register</span>\r\n            </button>\r\n            \r\n            <button mat-menu-item routerLink=\"/start/login\" routerLinkActive=\"Active\">\r\n              <mat-icon>login</mat-icon>\r\n              <span >Login</span>\r\n            </button>\r\n          </mat-menu>\r\n      <span routerLink=\"/\">Hemindall</span>\r\n      <span class=\"example-spacer\"></span>\r\n      <button  mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\" \r\n      routerLink=\"/start/register\" routerLinkActive=\"Active\">\r\n        <mat-icon>create</mat-icon>\r\n        </button>\r\n      <button mat-icon-button class=\"example-icon login-icon\" aria-label=\"Example icon-button with heart icon\"\r\n      routerLink=\"/start/login\" routerLinkActive=\"Active\">\r\n        <mat-icon>login</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n  </p>\r\n\r\n\r\n      <div *ngIf=\"!dcr\" class=\"alert alert-warning\" role=\"alert\">\r\n        {{textoErrorr}}\r\n      </div>\r\n   \r\n      <br><br><br>\r\n        <!--Registerndiv-->\r\n        <mat-card class=\"example-card\">\r\n      <mat-grid-list cols=\"2\" rowHeight=\"500px\">       \r\n        <mat-grid-tile>\r\n      <div>\r\n      \r\n        <mat-card-header>\r\n          <mat-card-title>Sing up</mat-card-title>                 \r\n        </mat-card-header>\r\n      <hr />\r\n      <br>\r\n        <mat-card-content>\r\n          <form [formGroup]=\"formularioc\" class=\"example-form\">\r\n                      \r\n            <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n              <td><mat-form-field class=\"example-full-width\">\r\n                <mat-label>Username</mat-label>\r\n                <input matInput formControlName=\"user\">\r\n              </mat-form-field></td>\r\n              <td><mat-form-field class=\"example-full-width\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput formControlName=\"nombre\">\r\n              </mat-form-field></td>\r\n            </tr></table>\r\n            <p>\r\n              <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Last name</mat-label>\r\n              <input matInput formControlName=\"apellidos\">\r\n            </mat-form-field>        \r\n           \r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput formControlName=\"email\">\r\n              </mat-form-field>\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>Password</mat-label>\r\n                <input matInput type=\"password\" formControlName=\"password\">\r\n              </mat-form-field>\r\n              \r\n            </p>\r\n          </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"center\">\r\n      <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n        <button mat-raised-button color=\"primary\" (click)=\"agregar()\" [disabled]=\"!formularioc.valid\" >Sing up</button>\r\n        <span>  </span>\r\n        <span class=\"example-spacer\"></span>\r\n        <button mat-raised-button [routerLink]=\"['/']\">Cancelar</button>              \r\n      </tr></table>\r\n      </mat-card-actions>\r\n\r\n      <mat-card-content align=\"center\">\r\n        <label class=\"Lavel-go\" (click)=\"this.router.navigate(['start/login'])\">Si ya tienes un usuario entra aqui</label>\r\n      </mat-card-content>\r\n    </div>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <img src=\"../assets/back_3r.png\" style=\"height: 500px; width: 550px;\" alt=\"\">\r\n  </mat-grid-tile>\r\n  </mat-grid-list>\r\n</mat-card> \r\n</div>\r\n<br><br><br><br>","import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Heminadall', cols: 1, rows: 1 }\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Heminadall', cols: 2, rows: 1 }\r\n      ];\r\n    })\r\n  );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n}\r\n","\r\n<!--here is the nave bar-->\r\n<p>\r\n  <mat-toolbar color=\"primary\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item routerLink=\"/start/register\" routerLinkActive=\"Active\">\r\n            <mat-icon>create</mat-icon>\r\n            <span routerLink=\"/start/register\" routerLinkActive=\"active\">Register</span>\r\n          </button>\r\n          \r\n          <button mat-menu-item routerLink=\"/start/login\" routerLinkActive=\"Active\">\r\n            <mat-icon>login</mat-icon>\r\n            <span >Login</span>\r\n          </button>\r\n        </mat-menu>\r\n    <span routerLink=\"/\">Hemindall</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button  mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\" \r\n    routerLink=\"/start/register\" routerLinkActive=\"Active\">\r\n      <mat-icon>create</mat-icon>\r\n      </button>\r\n    <button mat-icon-button class=\"example-icon login-icon\" aria-label=\"Example icon-button with heart icon\"\r\n    routerLink=\"/start/login\" routerLinkActive=\"Active\">\r\n      <mat-icon>login</mat-icon>\r\n      </button>\r\n  </mat-toolbar>\r\n</p>\r\n\r\n  <!--Mat-grit-division-->\r\n  \r\n  <div class=\"grid-container\">\r\n    <h1 class=\"mat-h1\">Dashboard</h1>\r\n    <mat-grid-list cols=\"2\" rowHeight=\"350px\">\r\n      <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\r\n        <mat-card class=\"dashboard-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              {{card.title}}\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <br><br>\r\n          <mat-card-content class=\"dashboard-card-content\" >\r\n            El mundo corporativo esta en el proceso de trascender de las practicas y el trabajo\r\n                manual a la automatización, pero, aunque algunas empresas se nieguen a seguir con\r\n                el movimiento, eso no detiene a las grandes empresas de TI seguir adelante y llevar\r\n                estos procesos a un nivel más allá de la simple automatización. Ese nivel es la\r\n                autonomía.\r\n<br><br>\r\n                La autonomía de estos procesos, especialmente procesos de TI como la Integración\r\n                Continua, la cual incluye comúnmente las pruebas de software, y la Entrega Continua,\r\n                son una de las mayores claves para el éxito de estas empresas, ya que están tratando\r\n                de ganar la carrera contra sus competidores al ser los primeros en desplegar nuevas\r\n                tecnologías y ser capaces de arreglar fallas con sus sistemas para mantener una\r\n                mayor estabilidad y tiempo de disponibilidad de sus aplicaciones o servicios de TI.\r\n              \r\n          </mat-card-content>\r\n        </mat-card>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </div>\r\n\r\n  <br>\r\n\r\n  <mat-card>\r\n\r\n    <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n        <mat-grid-tile>\r\n            <div class=\"example-card-home\">\r\n                <mat-card-header>\r\n                  \r\n                  <mat-card-title>Objetivos</mat-card-title>\r\n                  <mat-card-subtitle>Heminadll</mat-card-subtitle>\r\n                </mat-card-header>\r\n                \r\n                <mat-card-content>\r\n                  <p>\r\n                    El primordial objetivo de este proyecto es el desarrollo de una herramienta la cual\r\npermita la creación y la calidad de las pruebas de software de una manera más rápida\r\ny eficaz, utilizando herramientas y tecnologías emergentes como el Machine Learning\r\ny la Inteligencia Artificial se pretende crear una herramienta que le permita al usuario\r\ncrear pruebas a través de una estimación de los objetos que pueda contener una\r\naplicación web.\r\n\r\n                  </p>\r\n                </mat-card-content>\r\n              </div>\r\n        </mat-grid-tile>\r\n\r\n        <mat-grid-tile class=\"mat-grid-back\">\r\n            <img  src=\"../assets/back2.png\" alt=\"heminda-example-img-cart\" class=\"img1\">\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n\r\n    </mat-card>\r\n    \r\n  <mat-card>\r\n\r\n    <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n        <mat-grid-tile>\r\n            <img mat-card-image src=\"../assets/back2h.png\" class=\"img1\">\r\n        </mat-grid-tile>\r\n\r\n        <mat-grid-tile>\r\n\r\n          <div class=\"example-card-home\">\r\n            <mat-card-header>\r\n              \r\n              <mat-card-title>Alcance</mat-card-title>\r\n              <mat-card-subtitle>Heminadll</mat-card-subtitle>\r\n            </mat-card-header>\r\n            \r\n            <mat-card-content>\r\n              <p>\r\n                Usando Reconocimiento Óptico de Caracteres la herramienta pretende buscar un\r\n                elemento web relacionado a la palabra clave o tag que el usuario le suministre a la\r\n                aplicación a través de modelos entrenados de Machine Learning, los cuales serán\r\n                entrenados con una amplia variedad de iconos recopilados a través de diversas\r\n                aplicaciones web para asegurar su correcto funcionamiento y su viabilidad como una\r\n                herramienta independiente como suplemento para la creación más rápida y de mejor\r\n                calidad de una aplicación web, todo esto a través de una API, la cual podría ser\r\n                integrada a cualquier aplicación y accesada con un token de seguridad.\r\n                <br><br>\r\n                La aplicación no será un framework para pruebas automatizadas sino una herramienta\r\n                más la cual podrá ser usada en cualquier otro framework o a través de una interfaz\r\n                gráfica la cual será proporcionada a forma de demo por la aplicación.\r\n                \r\n              </p>\r\n            </mat-card-content>\r\n          </div>\r\n    \r\n\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n\r\n  </mat-card>\r\n\r\n  \r\n  \r\n\r\n  <!--Fotter home-->\r\n\r\n  <mat-grid-list cols=\"3\" rowHeight=\"358px\" class=\"mat-grit-fotter\">\r\n    <mat-grid-tile >\r\n\r\n        <div class=\"contact\">\r\n            <h1>contac us</h1>\r\n        <br>\r\n        <div class=\"example-button-row\">\r\n          <div class=\"example-flex-container\">\r\n            <div class=\"example-button-container\">\r\n              <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\r\n                <mat-icon>facebook</mat-icon> \r\n              </button>\r\n              \r\n              <label style=\"color: white; font-size: 18px;\">Contact us in facebook</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <h3>\r\n            and More.\r\n        </h3>\r\n        </div>\r\n        \r\n\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n\r\n        <div class=\"contact\">\r\n            <h1 style=\"text-align: center;\">Service for client</h1>\r\n        <br>\r\n        \r\n        <div class=\"example-button-container\">\r\n          <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\" style=\"color: white;\">\r\n            <mat-icon>how_to_reg</mat-icon>\r\n          </button>\r\n          <label style=\"color: white;\">Register</label>\r\n        </div>\r\n        <br>\r\n        <div class=\"example-button-container\">\r\n          <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\" style=\"color: white;\">\r\n            <mat-icon>account_circle</mat-icon>\r\n          </button>\r\n          \r\n          <label style=\"color: white;\">Login</label>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n        \r\n     \r\n\r\n        \r\n\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n        <div class=\"contact\">\r\n            <h1 style=\"text-align: center;\">More of us</h1>\r\n        <br>\r\n        \r\n        <label>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Esse, eligendi obcaecati. Culpa provident ad deserunt fugiat! Ut, repudiandae alias in eius quibusdam quaerat exercitationem voluptatum vero sit commodi libero vitae?\r\n            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sit error laudantium molestiae nobis eveniet ad nostrum! Ea, minima ducimus. Ullam quas sint rem optio eius repellat, magnam perferendis voluptate. Atque.\r\n            \r\n        </label>\r\n        </div>\r\n    </mat-grid-tile>\r\n    \r\n  </mat-grid-list>\r\n  \r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase:{\r\n      apiKey: \"AIzaSyBJNxe0SPqkv23YuixOLewra7-QpmX3OUM\",\r\n      authDomain: \"heimdall-9ba3e.firebaseapp.com\",\r\n      databaseURL: \"https://heimdall-9ba3e.firebaseio.com\",\r\n      projectId: \"heimdall-9ba3e\",\r\n      storageBucket: \"heimdall-9ba3e.appspot.com\",\r\n      messagingSenderId: \"685255586746\",\r\n      appId: \"1:685255586746:web:2879b0754ee2d30033e383\",\r\n      measurementId: \"G-7L858M4NBE\"\r\n    }\r\n  \r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExecutionService {\r\n\r\n  private host = 'http://localhost:3001/api';\r\n\r\n  headers = new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  });\r\n  \r\n  httpOptions = {\r\n    headers: this.headers\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  startExecution(url: string, label: string, browser: string) {\r\n    const data = {url, label, browser};\r\n    console.log(data);\r\n    console.log(this.host+'/execution');\r\n    return this.http.post(this.host + '/execution', data, this.httpOptions);\r\n  }\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'heimdall';\r\n}\r\n","\r\n\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MainNavBarComponent } from './main-nav-bar/main-nav-bar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AppStartComponent } from './app-start/app-start.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainNavBarComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AppStartComponent,\r\n    MainComponent,\r\n    NotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    LayoutModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    NgxSpinnerModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatProgressBarModule\r\n  ],\r\n  providers: [\r\n    AngularFireAuth,\r\n    AngularFirestore\r\n  ],  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main-nav-bar',\n  templateUrl: './main-nav-bar.component.html',\n  styleUrls: ['./main-nav-bar.component.css']\n})\nexport class MainNavBarComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container style=\"height: 100%;\">\r\n    <mat-sidenav #sidenav role=\"side\">\r\n        <mat-nav-list>\r\n            <a mat-list-item (click)=\"sidenav.close()\">Home</a>\r\n            <a mat-list-item (click)=\"sidenav.close()\">Not Home</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <mat-toolbar color=\"primary\" class=\"toolbar\">\r\n            <button mat-icon-button color=\"white\" aria-label=\"Menu\" matTooltip=\"Menu\" (click)=\"sidenav.toggle()\">\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n            <span class=\"app-name\">Heimdall</span>\r\n            <span class=\"spacer\"></span>\r\n            <mat-icon aria-label=\"Exit\" matTooltip=\"Exit\" (click)=\"this.router.navigate(['start/'])\">exit_to_app</mat-icon>\r\n        </mat-toolbar>\r\n        <main>\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://www.initcoms.com/wp-content/uploads/2020/07/404-error-not-found-1.png\" >\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainNavBarComponent } from './main-nav-bar/main-nav-bar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AppStartComponent } from './app-start/app-start.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'start', component: AppStartComponent, children: [\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: '', redirectTo: '/start/home', pathMatch: 'full' },\r\n    { path: '404', component: NotFoundComponent },\r\n    { path: '**', redirectTo: '/start/404', pathMatch: 'full' }\r\n  ] },\r\n  { path: 'main', component: MainNavBarComponent, children: [\r\n    { path: 'home', component: MainComponent },\r\n    { path: '', redirectTo: '/main/home', pathMatch: 'full' },\r\n    { path: '404', component: NotFoundComponent },\r\n    { path: '**', redirectTo: '/main/404', pathMatch: 'full' }\r\n  ] },\r\n  { path: '', redirectTo: '/start/home', pathMatch: 'full' },\r\n  { path: '404', component: NotFoundComponent },\r\n  { path: '**', redirectTo: '/start/404', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'firebase';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport * as firebase from 'firebase/app';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  \r\n  clientes: any[] = new Array<any>();\r\n  formularioLogin:FormGroup\r\n  dc:boolean=true;\r\n  usuario: User;\r\n  cargando:boolean=true;\r\n  textoError: string = ''\r\n  \r\n  constructor(public auth: AngularFireAuth, public cf:FormBuilder, public spinner: NgxSpinnerService,\r\n    public bd: AngularFirestore, public router: Router) {\r\n\r\n      \r\n    \r\n    this.auth.user.subscribe((user)=>{\r\n      \r\n      this.cargando=false;\r\n      this.usuario = user;\r\n      \r\n    })\r\n    console.log(this.usuario);\r\n    console.log(this.cargando);\r\n    if(this.usuario){\r\n      console.log('nav');\r\n      this.router.navigate(['main/home'], { state: { loggedIn: true } });\r\n    }\r\n\r\n   }\r\n   \r\n\r\n   \r\n\r\n  ngOnInit(): void {\r\n\r\n    this.bd.collection('clientes').valueChanges().subscribe((resultado)=>{\r\n      this.clientes = resultado;\r\n    })\r\n\r\n    this.formularioLogin=this.cf.group({\r\n      email:['',Validators.compose([\r\n        Validators.required,Validators.email\r\n      ])],\r\n      password:['',Validators.required]\r\n    });\r\n  }\r\n\r\n  onFacebookLogin(){\r\n    // Sign in using a redirect.\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.addScope('email');\r\n    firebase.auth().signInWithPopup(provider).then(function(result) {\r\n      // This gives you a Facebook Access Token.\r\n      \r\n      // The signed-in user info.\r\n      var user = result.user;\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  onGoogleLogin(){\r\n   \r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.addScope('profile');\r\nprovider.addScope('email');\r\nfirebase.auth().signInWithPopup(provider).then(\r\n (usuario)=>{\r\n  console.log(usuario)\r\n  this.spinner.hide();\r\n  this.router.navigate(['main/home'], { state: { loggedIn: true } });\r\n}).catch((error)=>{\r\n  this.dc = false;\r\n  this.textoError = error.message;\r\n  this.spinner.hide();\r\n  \r\n})   \r\n  }\r\n  \r\n\r\n  ingresar(){\r\n\r\n    if(this.formularioLogin.valid){\r\n      this.dc =true;\r\n      this.spinner.show();\r\n      this.auth.signInWithEmailAndPassword(this.formularioLogin.value.email,this.formularioLogin.value.password)\r\n      .then((usuario)=>{\r\n        console.log(usuario)\r\n        this.spinner.hide();\r\n        this.router.navigate(['main/home'], { state: { loggedIn: true } });\r\n      }).catch((error)=>{\r\n        this.dc = false;\r\n        this.textoError = error.message;\r\n        this.spinner.hide();\r\n\r\n      })\r\n    }else{\r\n    this.dc=false;\r\n    this.textoError = 'Por favor revisa que los datos esten correctos'\r\n  }\r\n}\r\n\r\n  logo(){\r\n    this.auth.signOut();\r\n  }\r\n\r\n}\r\n\r\n\r\n","\r\n    <div *ngIf=\"cargando\">\r\n      <mat-spinner class=\"example-margin\"></mat-spinner>\r\n    </div>\r\n\r\n    <div *ngIf=\"!cargando\">\r\n      <p>\r\n        <mat-toolbar color=\"primary\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n                <mat-icon>more_vert</mat-icon>\r\n              </button>\r\n              <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item routerLink=\"/start/register\" routerLinkActive=\"Active\">\r\n                  <mat-icon>create</mat-icon>\r\n                  <span routerLink=\"/start/register\" routerLinkActive=\"active\">Register</span>\r\n                </button>\r\n                \r\n                <button mat-menu-item routerLink=\"/start/login\" routerLinkActive=\"Active\">\r\n                  <mat-icon>login</mat-icon>\r\n                  <span >Login</span>\r\n                </button>\r\n              </mat-menu>\r\n          <span routerLink=\"/\">Hemindall</span>\r\n          <span class=\"example-spacer\"></span>\r\n          <button  mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\" \r\n          routerLink=\"/start/register\" routerLinkActive=\"Active\">\r\n            <mat-icon>create</mat-icon>\r\n            </button>\r\n          <button mat-icon-button class=\"example-icon login-icon\" aria-label=\"Example icon-button with heart icon\"\r\n          routerLink=\"/start/login\" routerLinkActive=\"Active\">\r\n            <mat-icon>login</mat-icon>\r\n            </button>\r\n        </mat-toolbar>\r\n      </p>\r\n\r\n      \r\n      <div *ngIf=\"!dc\" class=\"alert alert-warning\" role=\"alert\">\r\n        {{textoError}}\r\n      </div>\r\n\r\n      <br><br><br>\r\n        <!--Logindiv-->\r\n        <mat-card class=\"example-card\">\r\n      <mat-grid-list cols=\"2\" rowHeight=\"500px\">       \r\n        <mat-grid-tile>\r\n      <div>\r\n        <mat-card-header>\r\n          <mat-card-title >Login</mat-card-title>                 \r\n        </mat-card-header>\r\n      <hr />\r\n      <br>\r\n        <mat-card-content>\r\n                 \r\n          <form class=\"example-form\" [formGroup]=\"formularioLogin\" >       \r\n            <p>\r\n              <mat-form-field class=\"example-full-width\">\r\n                <div *ngIf=\"formularioLogin.controls['email'].invalid && formularioLogin.controls['email'].dirty\" class=\"alert alert-danger\" role=\"alert\">\r\n                  <span *ngIf=\"formularioLogin.controls['email'].errors.required\">  Correo es requerido</span>\r\n                    <span *ngIf=\"formularioLogin.controls['email'].errors.email\">Correo no es Valido</span>\r\n                </div> \r\n                <mat-label>Correo o usuario</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"email\">\r\n              </mat-form-field>\r\n               \r\n              <mat-form-field class=\"example-full-width\">\r\n                <div *ngIf=\"formularioLogin.controls['password'].invalid && formularioLogin.controls['password'].dirty\" class=\"alert alert-danger\" role=\"alert\">\r\n                  <span *ngIf=\"formularioLogin.controls['password'].errors.required\">La contraseña es requerida</span> \r\n              </div>  \r\n                <mat-label>password</mat-label>\r\n                <input matInput type=\"password\" ((keyup.enter)=\"ingresar()\" formControlName=\"password\">\r\n              </mat-form-field>\r\n            </p>\r\n          </form>\r\n      </mat-card-content>\r\n      \r\n      <mat-card-actions align=\"center\">\r\n      <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n        <button mat-raised-button type=\"submit\" (click)=\"ingresar()\" color=\"primary\" [disabled]=\"!formularioLogin.valid\" >login</button>\r\n        <span>  </span>\r\n        <span class=\"example-spacer\"></span>\r\n        <button mat-raised-button [routerLink]=\"['/']\">Cancelar</button>              \r\n      </tr></table>\r\n      </mat-card-actions>\r\n      <br>\r\n      <mat-card-content align=\"center\">Sing in with</mat-card-content>\r\n      <hr>\r\n      <mat-card-actions >\r\n          <div class=\"example-button-row\">\r\n          <div class=\"example-flex-container\">\r\n            <div class=\"example-button-container\">\r\n              <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\" (click)=\"onFacebookLogin()\">\r\n                <mat-icon>facebook</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"example-button-container\">\r\n              <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\" routerLink=\"/start/register\">\r\n                <mat-icon>mail_outline</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"example-button-container\">\r\n              <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a filter list icon\" (click)=\"onGoogleLogin()\">\r\n                <img src=\"../assets/googlei_2.png\" style=\"width: 20px; height: 20px;\">\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-actions>\r\n      \r\n      <mat-card-content align=\"center\">\r\n        <label class=\"Lavel-go\" routerLink=\"/start/register\" routerLinkActive=\"Active\" >Si aun no tienes un usuario registrate</label>\r\n      </mat-card-content>\r\n    </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <img src=\"../assets/back_3.png\" style=\"height: 400px;\" alt=\"\">\r\n    </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </mat-card> \r\n\r\n    <!-- <ngx-spinner bdColor = \"rgba(0,0,0,0)\" size = \"large\" color = \"#8994e2\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner> -->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ExecutionService } from '../services/execution.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  myControl = new FormControl();\r\n  filteredOptions: Observable<string[]>;\r\n  progressType = 'determinate';\r\n  progressValue = 0;\r\n  buttonValue = 'Search';\r\n  started = false;\r\n  supportedBrowsers: string[] = [\r\n    'firefox',\r\n    'chrome'\r\n  ];\r\n  labels: string[] = [\r\n    'search',\r\n    'menu',\r\n    'exit',\r\n    'user',\r\n    'phone'\r\n  ];\r\n  imgSource: any = '../../assets/screenshot.png';\r\n  result = [];\r\n\r\n  constructor(private executionService: ExecutionService, public router: Router) {\r\n    //console.log(this.router.getCurrentNavigation().extras.state.loggedIn);\r\n    // if (this.router.getCurrentNavigation().extras.state.loggedIn === null || this.router.getCurrentNavigation() === null) {\r\n    //   this.router.navigate(['start/login']);\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.labels.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onExecution(form: NgForm) {\r\n    if (!this.started) {\r\n      this.buttonValue = 'Stop';\r\n      this.progressType = 'indeterminate';\r\n      this.started = true;\r\n      this.executionService.startExecution(form.value.inUrl, this.myControl.value, form.value.inBrowser).subscribe(responseData => {\r\n        console.log(responseData);\r\n        let newImg = responseData['image'];\r\n        if(newImg != null && newImg.length < 1000) {\r\n          this.imgSource = '../../assets/screenshot.png';\r\n        } else {\r\n          this.convertImage(newImg);\r\n        }\r\n        alert(responseData['message']);\r\n        let resData = responseData['data'];\r\n        this.result.push(resData[0]['xpath-class']);\r\n        this.result.push(resData[0]['xpath-id']);\r\n        this.result.push(resData[0]['xpath-alt']);\r\n        this.result.push(resData[0]['xpath-title']);\r\n        this.buttonValue = 'Search';\r\n        this.progressType = 'determinate';\r\n        this.started = false;\r\n      });\r\n    } else {\r\n      this.buttonValue = 'Search';\r\n      this.progressType = 'determinate';\r\n      this.started = false;\r\n    }\r\n\r\n  }\r\n\r\n  convertImage(newimg) {\r\n    const imageBlob = this.dataURItoBlob(newimg);\r\n    const imageFile = new File([imageBlob], 'profilePic', {type: 'image/jpeg'});\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(imageFile);\r\n    reader.onload = (event1) => {\r\n      this.imgSource = event1.currentTarget;\r\n      this.imgSource = this.imgSource.result;\r\n    };\r\n  }\r\n\r\n  dataURItoBlob(dataURI) {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\r\n    return blob;\r\n }\r\n\r\n}\r\n","<mat-tab-group>\r\n    <!-- <mat-tab label=\"Thorium\"></mat-tab> -->\r\n    <mat-tab label=\"Heimdall\">\r\n        <mat-grid-list cols=\"3\" md-gutter=\"12px\" class=\"gridlist\">\r\n            <mat-grid-tile [colspan]=\"1\">\r\n                <form (submit)=\"onExecution(execForm)\" #execForm=\"ngForm\">\r\n                    <mat-form-field>\r\n                        <mat-label>URL</mat-label>\r\n                        <input matInput placeholder=\"Type the destination URL\" type=\"url\" name=\"inUrl\" #url=\"ngModel\" ngModel>\r\n                    </mat-form-field>\r\n                    <br>\r\n                    <mat-form-field>\r\n                        <mat-label>Label</mat-label>\r\n                        <input type=\"text\"\r\n                                matInput\r\n                                placeholder=\"Type what you're looking for\"\r\n                                [formControl]=\"myControl\"\r\n                                [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let label of filteredOptions | async\" [value]=\"label\">{{label}}</mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <br>\r\n                    <mat-form-field>\r\n                        <mat-label>Browser</mat-label>\r\n                        <mat-select name=\"inBrowser\" ngModel>\r\n                            <mat-option *ngFor=\"let browser of supportedBrowsers\" [value]=\"browser\">\r\n                                {{browser}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <br>\r\n                    <button mat-flat-button color=\"primary\" type=\"submit\">{{buttonValue}}</button>\r\n                    <br><br>\r\n                </form>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile [colspan]=\"2\">\r\n                <img [src]=\"imgSource\" class=\"screenshot\">\r\n            </mat-grid-tile>\r\n            <br>\r\n            <mat-grid-tile [colspan]=\"3\">\r\n                <mat-progress-bar [mode]=\"progressType\" value=\"0\"></mat-progress-bar>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile [colspan]=\"3\">\r\n                <div *ngFor=\"let res of result\">\r\n                    {{res}}\r\n                    <br>\r\n                </div>\r\n            </mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-tab>\r\n    <!-- <mat-tab label=\"Execution Configuration\"></mat-tab> -->\r\n</mat-tab-group>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-app-start',\n  templateUrl: './app-start.component.html',\n  styleUrls: ['./app-start.component.css']\n})\nexport class AppStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main>\n    <router-outlet></router-outlet>\n</main>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}